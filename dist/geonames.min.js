!function(){"use strict";function e(e){e=e||{},this.version="1.0",this.lan=e.lan||"en",this.encoding=e.encoding||"JSON",e.username||console.log("you must provide a username, if you don't have one register on http://www.geonames.org/login"),this.username=e.username||"demo"}function r(e,r,o,i){if(r!==s.BROWSER)return new Promise(function(r,n){if(a[e.uri])return r(a[e.uri]);t(e,r,n)});n(e,o,i)}function n(e,r,n){var t=new XMLHttpRequest;if(r=r||function(e){console.log("Geonames.js - call return with success status but is not managed "+e)},n=n||function(e){console.log("Geonames.js - exception thrown and not handled "+e)},a[e.uri])return r(a[e.uri]);t.onreadystatechange=function(){if(t.readyState==XMLHttpRequest.DONE){if(200==t.status)return a[e.uri]=JSON.parse(t.responseText),r(a[e.uri]);if(t.status>=400){var o=new Error("error making the request");return o.status=t.status,n(o)}}},t.open(e.method,e.uri,!0),t.send()}function t(e,r,n){d(e,function(t,o,i){return t||o.statusCode>=400?n(t||new Error(i)):(a[e.uri]=JSON.parse(i),r(a[e.uri]))})}function o(e,r){var n="";for(var t in r){var o=r[t];n+=encodeURIComponent(t)+"="+encodeURIComponent(o)+"&"}return n.length>0&&(n=n.substring(0,n.length-1),e=e+"?"+n),e}function i(){for(var e=1;e<arguments.length;e++)for(var r in arguments[e])arguments[e].hasOwnProperty(r)&&(arguments[0][r]=arguments[e][r]);return arguments[0]}var s={SERVER:0,BROWSER:1},a={},u="undefined"!=typeof module&&module.exports?s.SERVER:s.BROWSER;if(u===s.SERVER)try{require.resolve("bluebird"),require.resolve("request");var d=require("request");require("bluebird")}catch(e){return void console.log("you must include bluebird and request library")}e.prototype.CONF={baseUri:"http://api.geonames.org/",geoNamesAPI:["astergdem","children","cities","contains","countryCode","countryInfo","countrySubdivision","earthquakes","extendedFindNearby","findNearby","findNearbyPlaceName","findNearbyPostalCodes","findNearbyStreets","findNearbyStreetsOSM","findNearByWeather","findNearbyWikipedia","findNearestAddress","findNearestIntersection","findNearestIntersectionOSM","findNearbyPOIsOSM","geocode","get","gtopo30","hierarchy","neighbourhood","neighbours","ocean","postalCodeCountryInfo","postalCodeLookup","postalCodeSearch","rssToGeo","search","siblings","srtm1","srtm3","timezone","weather","weatherIcao","wikipediaBoundingBox","wikipediaSearch"]};for(var c=0;c<e.prototype.CONF.geoNamesAPI.length;c++)!function(n){e.prototype[e.prototype.CONF.geoNamesAPI[n]]=function(e,t,s){if("function"==typeof e){var a=e,d=t;e={},t=a,s=d,console.log("warning: you did not  pass an object of parameters as first argument")}var c={formatted:!0,style:"full",username:this.username,lang:this.lan},e=i({},c,e);return r({uri:o(this.CONF.baseUri+this.CONF.geoNamesAPI[n]+this.encoding,e),method:"GET"},u,t,s)}}(c);"undefined"!=typeof module&&module.exports?module.exports=e:window.GeoNames=e}();